searchState.loadedDescShard("tlsn_verifier", 0, "TLSNotary verifier library.\nInformation about the TLS session.\nUninitialized field\nCustom validation error\nA Verifier instance.\nConfiguration for the <code>Verifier</code>.\nBuilder for <code>VerifierConfig</code>.\nError type for VerifierConfigBuilder\nError for <code>Verifier</code>.\nBuilds a new <code>VerifierConfig</code>.\nCreates a new configuration builder.\nConnection information.\nCryptography provider.\nReturns the cryptography provider.\nVerifies the TLS session.\nNotarizes the TLS session.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new verifier.\nRuns the TLS verifier to completion, notarizing the TLS …\nReturns the protocol configuration validator.\nReceives the <strong>purported</strong> transcript from the Prover.\nRuns the verifier until the TLS connection is closed.\nServer’s name.\nSets up the verifier.\nStarts notarization of the TLS session.\nStarts verification of the TLS session.\nTLS Verifier state.\nRuns the TLS verifier to completion, verifying the TLS …\nState after the TLS connection has been closed.\nInitialized state.\nNotarizing state.\nState after MPC setup has completed.\nTLS Verifier state.\nVerifying state.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")